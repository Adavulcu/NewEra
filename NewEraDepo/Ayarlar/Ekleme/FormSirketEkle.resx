<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PicLogo.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAABl1JREFUeF7VW0tv3FQUTiRYARJIlAqa+NpjT6JSiU3YAJv+AFYFFk03gAQtdFcE
        qyJo2XZWJeUHJKyyRWpBhA1VpVYqEohuw4JNmr6GUCJa0pTvuz6TzNjH9njGr3zSUaK552n7Hp977vVE
        2QiCYF/bmCNt430eGG+p7brXfOP+ERj3NuiB0G3+xjHLA17KUFbU7C20pluvIpBO4Lq/Ibht0OMRaTvU
        4XWoU9Q3E7Ozs8/4xnwCp29EgiiSbtAGbYnZ+uE4znO4S2fg3N2Is2XSXdj8krbFjVowGRjzPuiW4mBV
        tI688R59CV2qCMH0tI8k9bPiUBrdBK1gPi8gyX0Kx49Dxzz+HvUd7wP+xrHAcS+B768+uUyiLzOO0xL3
        ykXgeO/A6DAOPkJQP+IJOQkHD4r4UDg8cfgJ33HekKl1BbTVpzeJuvDtbVFRCvDIe+cUw1Ha4PycmZo6
        IHJjw/M8gwt5Hro3I7YU8s5BpNgpMTc39ySUfxs3NkAPrZMlvrupG2+Bs7B1L2I7Qt4SfRax8UBFvvG+
        0w31yCz7U34gIqXjoDEvwu7FuB+7RJ+LuAh47FPv/L9IYu8Kb+VgfoEPKdPCWwLb6NMhY86vwYHXhLU2
        tJ3Wm4pvfWRzQn5ItlcUWrru+/60sNYGTjvchD8V/wYIb6G3RGQ48D0PwaRX3fVX9u9/Slhrw7DBC3Xz
        1AmTKUXO2l668/3EmCCanQ9YWmoKQFi21j/ns4L3Hfcb/L0f/Z2UmbDtwiahtq8z2/eQGbwxX5EPPB9r
        46B113Wftco0sIJThEBmWVhqw7DBCyYRyw8aH9YaXwjPILjGBoO2pH1I48JWC3IGb8FchbFulBd059C+
        Q08L2y7YaFCYQd7XwlILRgm+h5Qn+pSw7AIDWidno86+3DjBEzMvzTwPPq1S/F1YQoQ9vBjTY15BYakc
        4wbfA57gBVXeceaExTJ1FKZHRS5p86Co4AkWQJBR+gleR1jsXGH3doCBzQwZrhRFBt8Dgr0c1dM27q/h
        IOY4flBa1+akZagQZQRPJCTDbeaICZSIR5RBlo652ljjoqzgCdteU3QydlwA7tjEBm+KbCUoM3iCPUbo
        2YjqReynOT+WogOgFZEtHWUH3wMqwO/j+s0iFz/X4gPegsiViqqCJ6DvQlQ/LspVVIB2o3JggD16kSsN
        VQZPtB33M8XOKq8Md2kHBvBUHBe5UlB18ITveB/GbZlbvADcnh4YQHacF7nCUUfwBGNS7D3QL4DrHhW5
        QlFX8ATsHlNs2gsQmwLcqxO5wlBn8ARu6om4XUyBKpJg3cETiUmw7NdgE4InYEt/DaqFkONeErmx0JTg
        Cdj7KWofvqEQ0kvhLstHkR0JTQqegE2eTxjwwZbCSYshLiBENjcaF7zjvKz5YRdDicth1z0j8rnQtOAJ
        +MNN1Kgv4XLYMigNEdAVO5gDTQyegO2VqC87DRECiVBriW3xZIawZKKxwR8IpmD/UdQfxiwsKU1RY84L
        SyqaGjyR0A0abIoS+FFri/+zM08S0OTgfd9/Ab79rfg12BYn4Ki6MYLfzwpLDE0OnmBBp/kFn+MbIylb
        Y/d4JkfYdtD04FtTrTb8+0/xTd8aI5LmC+iisFg0PXgC/i1rviVujhLh9ri7HhOyFLbJ90LwWN8knXFI
        3x4nUoQ3wwNJzQ4ePrwOX2I9DhJiG+qMQ9oRmURqRPDhlvha1DcSYwLLcEfmZD9N21tXqQnB8+AWfPkl
        6ptQrkNSFjx4rCiKUYPufFLwvPv5jsn1gPdo6uFoHkgS1togcz621N2lEQ9KCnhCXNs56tF9vDo/Et7K
        IQlbTXghmUWwjXdyfKjD0tx2wqJDREqHFDn6e16oqMPSFlQEpVnH5bsspLLWDuMgrO1Z3qoVXh8VeFy+
        D8N+MLFJJ4v8hMUuacMqNbbDG6cSPpjoh7wdhvlkZgvOXKbjbK/l7TGGbSzbyWEzQ1nPx6g7crbPC97d
        EYqlDZsrjHuBPXru1UHHPII8hmR2Qvr2bF2ze5uS1eNEX4p84obFZJiFa/9sjuVteY98Fri4kPlZ5YeT
        d7iqy1zYVImwn2BOwblSP52ljcT1fFPAfhsSYIedVzg91sfToQ6vE+vh7RWwLkCS4ufzp3H3FvHoXkVg
        q5I7WMWB7P+r4ZhZJC9lyqwpQkxM/A+JJzlV5XqKwQAAAABJRU5ErkJggg==
</value>
  </data>
</root>